require_relative '../sudoku'

describe "Sudoku" do
  let(:test_board) {"1-58-2----9--764-52--4--819-19--73-6762-83-9-----61-5---76---3-43--2-5-16--3-89--"}
  let(:test_row) {["1", "123456789", "5", "8", "123456789", "2", "123456789", "123456789", "123456789"]}
  context 'initial formatting for solvable table' do
    it 'splits string into rows' do
      expect(format_rows(test_board)).to eq \
      ["1-58-2---",\
        "-9--764-5",\
        "2--4--819",\
        "-19--73-6",\
        "762-83-9-",\
        "----61-5-",\
        "--76---3-",\
        "43--2-5-1",\
        "6--3-89--"]
    end

    it 'splits each string within rows array to its own array' do
      expect(format_columns(format_rows(test_board))).to eq \
      [\
      ["1", "-", "5", "8", "-", "2", "-", "-", "-"], \
      ["-", "9", "-", "-", "7", "6", "4", "-", "5"], \
      ["2", "-", "-", "4", "-", "-", "8", "1", "9"], \
      ["-", "1", "9", "-", "-", "7", "3", "-", "6"], \
      ["7", "6", "2", "-", "8", "3", "-", "9", "-"], \
      ["-", "-", "-", "-", "6", "1", "-", "5", "-"], \
      ["-", "-", "7", "6", "-", "-", "-", "3", "-"], \
      ["4", "3", "-", "-", "2", "-", "5", "-", "1"], \
      ["6", "-", "-", "3", "-", "8", "9", "-", "-"] \
    ]
    end

    it 'it formats string into a board to be solved' do
      expect(format_board(test_board)).to eq \
      [\
        ["1", "123456789", "5", "8", "123456789", "2", "123456789", "123456789", "123456789"], \
        ["123456789", "9", "123456789", "123456789", "7", "6", "4", "123456789", "5"], \
        ["2", "123456789", "123456789", "4", "123456789", "123456789", "8", "1", "9"], \
        ["123456789", "1", "9", "123456789", "123456789", "7", "3", "123456789", "6"], \
        ["7", "6", "2", "123456789", "8", "3", "123456789", "9", "123456789"], \
        ["123456789", "123456789", "123456789", "123456789", "6", "1", "123456789", "5", "123456789"], \
        ["123456789", "123456789", "7", "6", "123456789", "123456789", "123456789", "3", "123456789"], \
        ["4", "3", "123456789", "123456789", "2", "123456789", "5", "123456789", "1"], \
        ["6", "123456789", "123456789", "3", "123456789", "8", "9", "123456789", "123456789"] \
      ]
    end
  end

  context 'reduces possibilities in row cells' do
    it 'reduces possibilities in one row' do
      expect(reduce_possibilities(test_row)).to eq ["1", "34679", "5", "8", "34679", "2", "34679", "34679", "34679"]
    end

    it 'reduces possibilities in all rows' do
      expect(reduce_possibilities_rows(format_board(test_board))).to eq \
      [\
        ["1", "34679", "5", "8", "34679", "2", "34679", "34679", "34679"],\
        ["1238", "9", "1238", "1238", "7", "6", "4", "1238", "5"],\
        ["2", "3567", "3567", "4", "3567", "3567", "8", "1", "9"],\
        ["2458", "1", "9", "2458", "2458", "7", "3", "2458", "6"],\
        ["7", "6", "2", "145", "8", "3", "145", "9", "145"],\
        ["234789", "234789", "234789", "234789", "6", "1", "234789", "5", "234789"],\
        ["124589", "124589", "7", "6", "124589", "124589", "124589", "3", "124589"],\
        ["4", "3", "6789", "6789", "2", "6789", "5", "6789", "1"],\
        ["6", "12457", "12457", "3", "12457", "8", "9", "12457", "12457"]\
      ]
    end
  end
end
